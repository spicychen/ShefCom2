#version 330 core

in vec3 fragPos;
in vec3 ourNormal;
in vec2 ourTexCoord;

out vec4 fragColor;

uniform sampler2D first_texture;
uniform vec3 viewPos;

struct Light {
  vec3 position;
  vec3 ambient;
  vec3 diffuse;
  vec3 specular;
};

uniform Light light;  
uniform vec3 spotDir;

uniform Light worldLight;
uniform Light lamp;

struct Material {
  vec3 ambient;
  vec3 diffuse;
  vec3 specular;
  float shininess;
}; 
  
uniform Material material;

//lights property are disabled here
void main() {
  // ambient
  vec3 ambient = material.ambient * texture(first_texture, ourTexCoord).rgb;
  
  // diffuse
  vec3 diffuse = material.diffuse * texture(first_texture, ourTexCoord).rgb;
  
  // specular 
  vec3 specular = material.specular;

  vec3 result = ambient + diffuse + specular;
  fragColor = vec4(result, 1);
}